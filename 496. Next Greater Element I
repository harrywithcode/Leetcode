public class Solution {
    public int[] nextGreaterElement(int[] findNums, int[] nums) {
        List<Integer> res = new ArrayList<Integer>();
        int[] result = new int[findNums.length];
        for(int i = 0; i < findNums.length; i++){
            for(int j = 0; j < nums.length; j++){
                if(findNums[i] == nums[j]){
                    int k = j + 1;
                    if(j == nums.length - 1){
                        res.add(-1);
                        break;
                    }
                    else{
                        while( k < nums.length){
                            if(nums[k] > nums[j]){
                                res.add(nums[k]);
                                break;
                            }
                            k++;
                            if(k == nums.length){
                                res.add(-1);
                                break;
                            }
                        }   
                    }
                }
            }
        }
        for(int i = 0; i < res.size(); i++){
            result[i] = res.get(i);
        }
        return result;
    }
}



//////////////////////////////Better/////////////
public class Solution {
    public int[] nextGreaterElement(int[] findNums, int[] nums) {
        Map<Integer, Integer> map = new HashMap<Integer, Integer>();
        Stack<Integer> stack = new Stack<Integer>();
        for(int i : nums){
            while(!stack.isEmpty() && stack.peek() < i){
                map.put(stack.pop(), i);
            }
            stack.push(i);
        }
        for(int i = 0; i < findNums.length; i++){
            findNums[i] = map.getOrDefault(findNums[i], -1);
        }
        return findNums;
    }
}
