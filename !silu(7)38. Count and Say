public class Solution {
    public String countAndSay(int n) {
        StringBuilder str1 = new StringBuilder();
        StringBuilder str2 = new StringBuilder();
        str1.append("1");
        str2.append("11");
        for(int i = 3; i < = n; i++){
            while(str1.charAt(j + 1) != null){
                int count = 0;
                int j = 2;
                if(str1.charAt(j + 1) == str1.charAt(j)){
                    count++;
                    j++;
                }
                else{
                    str2.append(count);
                    str2.append(str1.charAt(j));
                    str1.replace(0, str2.length(),str2);
                    str2 = new StringBuilder();
                }
            }
        }
        return str2;
    }
}



//answer
public class Solution {
    public String countAndSay(int n) {
    	StringBuilder str1=new StringBuilder("1");
    	StringBuilder str2;
    	int count;
    	char current;
        for(int i = 1;i < n;i++){
        	str2 = str1;
 	        str1 = new StringBuilder();       
 	        count = 1;
 	        current = str2.charAt(0);
 	        for (int j = 1; j < str2.length(); j++){
 	        	if (str2.charAt(j) != current){
 	        		str1.append(count).append(current);
 	        		count=1;
 	        		current=str2.charAt(j);
 	        	}
 	        	else count++;
 	        }
             str1.append(count).append(current);
        }	       	        
	    return str1.toString();
    }
}
