public class Solution {
    public void rotate(int[] nums, int k) {
        k = k % nums.length;
        int[] copy = new int[k];
        for(int i = 0;i < k;i++){
            copy[k - 1 - i] = nums[nums.length - 1 - i];
        }
        for(int j = 0; j < nums.length - k;j++){
            nums[nums.length - 1 - j] = nums[nums.length - 1 - j - k];
        }
        for(int x = 0; x < k; x++){
            nums[x] = copy[x];
        }
    }
}
///////////////////////////////////////////////////
public class Solution {
    public void rotate(int[] nums, int k) {
        k = k % nums.length;
        reverse(nums, 0,nums.length - 1);
        reverse(nums, 0, k - 1);
        reverse(nums, k, nums.length - 1);
    }
    
    public void reverse(int[] nums, int head, int tail){
        while(head < tail){
            int temp = nums[head];
            nums[head] = nums[tail];
            nums[tail] = temp;
            head++;
            tail--;
        }
    }
}
//////////////////////////////////////////////
public class Solution {
    public void rotate(int[] nums,int k) {
	int len=nums.length;
	int n=k%len;
	int[] ans=new int[len];
	for (int i = 0; i < n; i++) {
		ans[i]=nums[len-n+i];
    	}
	for (int i = n,j=0; i < len; i++) {
		ans[i]=nums[j++];
    	}
	for (int i = 0; i < len; i++) {
		nums[i]=ans[i];	
	    }
    }
}
///////////////////////////////////
public class Solution {
    public void rotate(int[] nums, int k) {
        int size=nums.length;
      
       //拷贝一份数据 a copy of the data
        int [] list=new int[size];
       
        for(int i=0;i<size;i++){
           list[i]=nums[i];
        }
       
        for(int i=0;i<size;i++){
            nums[(i+k)%size]=list[i];
        }
    }
}
//////////////////////////////
public class Solution {
    public void rotate(int[] nums, int k) {
        int n=nums.length;
        int [] ret=new int [n];
        for(int i=0;i<n;i++)
        {
            ret[(i+k)%n]=nums[i];
        }
        for(int i=0;i<n;i++)
        {
            nums[i]=ret[i];
        }
    }
}
////////////////////////////////////////////////////
public class Solution {
    public void rotate(int[] nums, int k) {
        int n = nums.length;
        int[] newList = new int[n];
        if (n > 1) {
            k = k % n;
            System.arraycopy(nums, n - k, newList, 0, k);
            System.arraycopy(nums, 0, newList, k, n - k);
            System.arraycopy(newList, 0, nums, 0, n);
        }
    }
}
